package it.unicam.cs.mpmgc.vectorrally.api.model.algorithms;

import it.unicam.cs.mpmgc.vectorrally.api.model.movements.Acceleration;

import java.util.ArrayList;
import java.util.List;

/**
 * Defines a method for generating possible shifts (accelerations) from a given speed.
 *
 * @version 1.0
 * @since 2024-07-11
 * @author Marta Musso
 * <a href="mailto:marta.musso@studenti.unicam.it">marta.musso@studenti.unicam.it</a>
 */
public interface NeighborsGenerator {

    /**
     * Generates all possible shifts (accelerations) from the given speed.
     *
     * @param speed the current speed as an acceleration vector.
     * @return a list of possible new accelerations representing the shifts.
     */
    List<Acceleration> generateShifts(Acceleration speed);

    /**
     * Generates a list of new accelerations by applying given delta values to the current speed.
     *
     * @param speed the current speed as an acceleration vector.
     * @param dx an array of x-axis delta values to be applied to the current speed.
     * @param dy an array of y-axis delta values to be applied to the current speed.
     * @return a list of new accelerations generated by applying the given delta values.
     */
    default List<Acceleration> getAccelerations(Acceleration speed, int[] dx, int[] dy) {
        List<Acceleration> shifts = new ArrayList<>();
        for (int i = 0; i < dx.length; i++) {
            shifts.add(new Acceleration(speed.getDx() + dx[i], speed.getDy() + dy[i]));
        }
        return shifts;
    }
}
